{
  "address": "0x82F2Ed52788D5142fc1179b8BeA3A7044423f278",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_students",
          "type": "address[]"
        }
      ],
      "name": "addStudents",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_teachers",
          "type": "address[]"
        }
      ],
      "name": "addTeachers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "chairman",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string[]",
          "name": "_choices",
          "type": "string[]"
        }
      ],
      "name": "createBallot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getBallot",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "votes",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Voting.Choice[]",
              "name": "choices",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Voting.Ballot",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVotingResultStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVotingStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ballotId",
          "type": "uint256"
        }
      ],
      "name": "results",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "votes",
              "type": "uint256"
            }
          ],
          "internalType": "struct Voting.Choice[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_chairman",
          "type": "address"
        }
      ],
      "name": "setChairman",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_votingResult",
          "type": "bool"
        }
      ],
      "name": "setVotingResultStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_votingStatus",
          "type": "bool"
        }
      ],
      "name": "setVotingStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "students",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "teachers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ballotId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "choiceId",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x33ad423c664e8fd775cb9224817611a8c89d84845c345416c2e59979bb852299",
  "receipt": {
    "to": null,
    "from": "0x2311d48dd87B8a21e1Bf22FCaB0C3eE2A516b43C",
    "contractAddress": "0x82F2Ed52788D5142fc1179b8BeA3A7044423f278",
    "transactionIndex": 0,
    "gasUsed": "1757696",
    "logsBloom": "0x
    "blockHash": "0xa59d5849367acbf2b8b83fdaff6a32caab465afe4291845d95e813987ae5b14e",
    "transactionHash": "0x33ad423c664e8fd775cb9224817611a8c89d84845c345416c2e59979bb852299",
    "logs": [],
    "blockNumber": 10541741,
    "cumulativeGasUsed": "1757696",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "94cb72074687bf34de03689eb32c28e1",
  "metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_students\",\"type\":\"address[]\"}],\"name\":\"addStudents\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_teachers\",\"type\":\"address[]\"}],\"name\":\"addTeachers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chairman\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"_choices\",\"type\":\"string[]\"}],\"name\":\"createBallot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getBallot\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"}],\"internalType\":\"struct Voting.Choice[]\",\"name\":\"choices\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Voting.Ballot\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVotingResultStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVotingStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ballotId\",\"type\":\"uint256\"}],\"name\":\"results\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"}],\"internalType\":\"struct Voting.Choice[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_chairman\",\"type\":\"address\"}],\"name\":\"setChairman\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_votingResult\",\"type\":\"bool\"}],\"name\":\"setVotingResultStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_votingStatus\",\"type\":\"bool\"}],\"name\":\"setVotingStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"students\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"teachers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ballotId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"choiceId\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Voting.sol\":\"Voting\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Voting.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.5;\\n\\n\\ncontract Voting {\\n\\n  /*\\n    * get teachers list\\n  */\\n  mapping(address => bool) public teachers;\\n\\n  /*\\n    * get student list\\n  */\\n  mapping(address => bool) public students;\\n\\n  address public admin;\\n\\n  address public chairman;\\n\\n  /*\\n    * get voting status\\n  */\\n  bool votingEnabled;\\n\\n  /*\\n    * get voting result\\n  */\\n  bool votingResult;\\n\\n\\n  /*\\n    * struct for voting choices\\n  */\\n\\n  struct Choice {\\n    uint id;\\n    string name;\\n    uint votes;\\n  }\\n\\n  /*\\n    * struct for voting Ballot\\n  */\\n  struct Ballot {\\n    uint id;\\n    string name;\\n    Choice[] choices;\\n  }\\n\\n  mapping(uint => Ballot) ballots;\\n  uint nextBallotId;\\n  mapping(address => mapping(uint => bool)) votes;\\n\\n  constructor() {\\n    admin = msg.sender;\\n  }\\n\\n\\n  /*\\n    * set chairman\\n  */\\n  function setChairman(address _chairman) external onlyAdmin() {\\n    chairman = _chairman;\\n  }\\n\\n  /*\\n    * set voting status\\n  */\\n  function setVotingStatus(bool _votingStatus) external {\\n    require(msg.sender == chairman);\\n    votingEnabled = _votingStatus;\\n  }\\n\\n  /*\\n    * view voting status\\n  */\\n  function getVotingStatus() external view returns (bool) {\\n    return votingEnabled;\\n  }\\n\\n  /*\\n    * set voting result\\n  */\\n  function setVotingResultStatus(bool _votingResult) external onlyAuthorized() {\\n    votingResult = _votingResult;\\n  }\\n\\n    /*\\n    * view voting status\\n  */\\n  function getVotingResultStatus() external view returns (bool) {\\n    return votingResult;\\n  }\\n\\n  /*\\n    * add teacher\\n  */\\n  function addTeachers(address[] calldata _teachers) external onlyAdmin() {\\n    for(uint i = 0; i < _teachers.length; i++) {\\n        teachers[_teachers[i]] = true;\\n    }\\n  }\\n\\n  /*\\n    * add stuudent\\n  */\\n  function addStudents(address[] calldata _students) external onlyAdmin() {\\n    for(uint i = 0; i < _students.length; i++) {\\n        students[_students[i]] = true;\\n    }\\n  }\\n\\n  /*\\n    * create ballot\\n  */\\n  function createBallot(\\n    string memory name,\\n    string[] memory _choices\\n    ) public onlyChairman() {\\n      ballots[nextBallotId].id = nextBallotId;\\n      ballots[nextBallotId].name = name;\\n      for(uint i = 0; i < _choices.length ; i++) {\\n        ballots[nextBallotId].choices.push(Choice(i, _choices[i], 0));\\n      }\\n      nextBallotId++;\\n  }\\n\\n  /*\\n    * get ballot\\n  */\\n\\n  function getBallot(uint _id) external view returns (Ballot memory) {\\n    return ballots[_id];\\n  }\\n\\n\\n  modifier onlyAdmin() {\\n    require(msg.sender == admin, 'only admin');\\n    _;\\n  }\\n\\n  modifier onlyAuthorized() {\\n    require((msg.sender == chairman) || (teachers[msg.sender] == true), 'only the chairman or authorized teacher');\\n    _;\\n  }\\n\\n    modifier onlyAuthorizedToVote() {\\n    require((msg.sender == chairman) || (teachers[msg.sender] == true) || (students[msg.sender] == true), 'only the chairman or authorized teacher');\\n    _;\\n  }\\n\\n  modifier onlyChairman() {\\n    require(msg.sender == chairman, 'only chairman');\\n    _;\\n  }\\n  /*\\n    * vote\\n  */\\n  function vote(uint ballotId, uint choiceId) external onlyAuthorizedToVote() {\\n    require(votingEnabled, \\\"Voting is not enabled\\\");\\n    require(ballots[ballotId].choices[choiceId].id == choiceId, \\\"Choice does not exist\\\");\\n    require(votes[msg.sender][ballotId] == false, 'You have already voted, voter can only vote once for a ballot');\\n    votes[msg.sender][ballotId] = true;\\n    ballots[ballotId].choices[choiceId].votes++;\\n  }\\n\\n  function results(uint ballotId) \\n  view \\n  external \\n  returns(Choice[] memory) {\\n  require(votingResult, 'cannot see the ballot result until Chairman or Teacher has it shared');\\n  return ballots[ballotId].choices;\\n}\\n\\n\\n}\",\"keccak256\":\"0xca966d715785b35fabae907ada102490213c4b547442c6f18a00d255921e0d79\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611e8a806100616000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063a6c807a911610097578063f2f0177011610066578063f2f0177014610270578063f40046ae1461028c578063f851a440146102a8578063f9d5ee75146102c6576100f5565b8063a6c807a9146101d8578063a7b4952914610208578063b384abef14610224578063f0a47f7814610240576100f5565b80637478c9fe116100d35780637478c9fe14610166578063794074a11461018257806387f7b9751461019e578063892ac0c2146101bc576100f5565b80631b0c27da146100fa57806347ae4fb01461012a578063581c281c14610148575b600080fd5b610114600480360381019061010f9190611477565b6102f6565b60405161012191906117ff565b60405180910390f35b610132610460565b60405161013f9190611821565b60405180910390f35b610150610477565b60405161015d9190611821565b60405180910390f35b610180600480360381019061017b91906113d2565b61048e565b005b61019c600480360381019061019791906113ff565b610505565b005b6101a66106c7565b6040516101b391906117e4565b60405180910390f35b6101d660048036038101906101d19190611385565b6106ed565b005b6101f260048036038101906101ed9190611358565b610821565b6040516101ff9190611821565b60405180910390f35b610222600480360381019061021d9190611358565b610841565b005b61023e600480360381019061023991906114a4565b610915565b005b61025a60048036038101906102559190611358565b610c84565b6040516102679190611821565b60405180910390f35b61028a60048036038101906102859190611385565b610ca4565b005b6102a660048036038101906102a191906113d2565b610dd8565b005b6102b0610edf565b6040516102bd91906117e4565b60405180910390f35b6102e060048036038101906102db9190611477565b610f05565b6040516102ed919061191c565b60405180910390f35b6060600360159054906101000a900460ff16610347576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033e9061183c565b60405180910390fd5b60046000838152602001908152602001600020600201805480602002602001604051908101604052809291908181526020016000905b828210156104555783829060005260206000209060030201604051806060016040529081600082015481526020016001820180546103ba90611ac1565b80601f01602080910402602001604051908101604052809291908181526020018280546103e690611ac1565b80156104335780601f1061040857610100808354040283529160200191610433565b820191906000526020600020905b81548152906001019060200180831161041657829003601f168201915b505050505081526020016002820154815250508152602001906001019061037d565b505050509050919050565b6000600360159054906101000a900460ff16905090565b6000600360149054906101000a900460ff16905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104e857600080fd5b80600360146101000a81548160ff02191690831515021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610595576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058c906118dc565b60405180910390fd5b600554600460006005548152602001908152602001600020600001819055508160046000600554815260200190815260200160002060010190805190602001906105e09291906110d3565b5060005b81518110156106aa57600460006005548152602001908152602001600020600201604051806060016040528083815260200184848151811061062957610628611bcb565b5b602002602001015181526020016000815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000155602082015181600101908051906020019061068a9291906110d3565b5060408201518160020155505080806106a290611b24565b9150506105e4565b50600560008154809291906106be90611b24565b91905055505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461077d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107749061187c565b60405180910390fd5b60005b8282905081101561081c5760016000808585858181106107a3576107a2611bcb565b5b90506020020160208101906107b89190611358565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550808061081490611b24565b915050610780565b505050565b60016020528060005260406000206000915054906101000a900460ff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c89061187c565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806109c05750600115156000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b80610a1b575060011515600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b610a5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a51906118fc565b60405180910390fd5b600360149054906101000a900460ff16610aa9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa0906118bc565b60405180910390fd5b80600460008481526020019081526020016000206002018281548110610ad257610ad1611bcb565b5b90600052602060002090600302016000015414610b24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1b9061185c565b60405180910390fd5b60001515600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060009054906101000a900460ff16151514610bc8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bbf9061189c565b60405180910390fd5b6001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060006101000a81548160ff021916908315150217905550600460008381526020019081526020016000206002018181548110610c5957610c58611bcb565b5b90600052602060002090600302016002016000815480929190610c7b90611b24565b91905055505050565b60006020528060005260406000206000915054906101000a900460ff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2b9061187c565b60405180910390fd5b60005b82829050811015610dd3576001806000858585818110610d5a57610d59611bcb565b5b9050602002016020810190610d6f9190611358565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508080610dcb90611b24565b915050610d37565b505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610e835750600115156000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b610ec2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb9906118fc565b60405180910390fd5b80600360156101000a81548160ff02191690831515021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610f0d611159565b6004600083815260200190815260200160002060405180606001604052908160008201548152602001600182018054610f4590611ac1565b80601f0160208091040260200160405190810160405280929190818152602001828054610f7190611ac1565b8015610fbe5780601f10610f9357610100808354040283529160200191610fbe565b820191906000526020600020905b815481529060010190602001808311610fa157829003601f168201915b5050505050815260200160028201805480602002602001604051908101604052809291908181526020016000905b828210156110c457838290600052602060002090600302016040518060600160405290816000820154815260200160018201805461102990611ac1565b80601f016020809104026020016040519081016040528092919081815260200182805461105590611ac1565b80156110a25780601f10611077576101008083540402835291602001916110a2565b820191906000526020600020905b81548152906001019060200180831161108557829003601f168201915b5050505050815260200160028201548152505081526020019060010190610fec565b50505050815250509050919050565b8280546110df90611ac1565b90600052602060002090601f0160209004810192826111015760008555611148565b82601f1061111a57805160ff1916838001178555611148565b82800160010185558215611148579182015b8281111561114757825182559160200191906001019061112c565b5b509050611155919061117a565b5090565b60405180606001604052806000815260200160608152602001606081525090565b5b8082111561119357600081600090555060010161117b565b5090565b60006111aa6111a584611963565b61193e565b905080838252602082019050828560208602820111156111cd576111cc611c33565b5b60005b8581101561121b57813567ffffffffffffffff8111156111f3576111f2611c2e565b5b8086016112008982611315565b855260208501945060208401935050506001810190506111d0565b5050509392505050565b60006112386112338461198f565b61193e565b90508281526020810184848401111561125457611253611c38565b5b61125f848285611a7f565b509392505050565b60008135905061127681611e0f565b92915050565b60008083601f84011261129257611291611c2e565b5b8235905067ffffffffffffffff8111156112af576112ae611c29565b5b6020830191508360208202830111156112cb576112ca611c33565b5b9250929050565b600082601f8301126112e7576112e6611c2e565b5b81356112f7848260208601611197565b91505092915050565b60008135905061130f81611e26565b92915050565b600082601f83011261132a57611329611c2e565b5b813561133a848260208601611225565b91505092915050565b60008135905061135281611e3d565b92915050565b60006020828403121561136e5761136d611c42565b5b600061137c84828501611267565b91505092915050565b6000806020838503121561139c5761139b611c42565b5b600083013567ffffffffffffffff8111156113ba576113b9611c3d565b5b6113c68582860161127c565b92509250509250929050565b6000602082840312156113e8576113e7611c42565b5b60006113f684828501611300565b91505092915050565b6000806040838503121561141657611415611c42565b5b600083013567ffffffffffffffff81111561143457611433611c3d565b5b61144085828601611315565b925050602083013567ffffffffffffffff81111561146157611460611c3d565b5b61146d858286016112d2565b9150509250929050565b60006020828403121561148d5761148c611c42565b5b600061149b84828501611343565b91505092915050565b600080604083850312156114bb576114ba611c42565b5b60006114c985828601611343565b92505060206114da85828601611343565b9150509250929050565b60006114f08383611785565b905092915050565b61150181611a37565b82525050565b6000611512826119d0565b61151c81856119f3565b93508360208202850161152e856119c0565b8060005b8581101561156a578484038952815161154b85826114e4565b9450611556836119e6565b925060208a01995050600181019050611532565b50829750879550505050505092915050565b6000611587826119d0565b6115918185611a04565b9350836020820285016115a3856119c0565b8060005b858110156115df57848403895281516115c085826114e4565b94506115cb836119e6565b925060208a019950506001810190506115a7565b50829750879550505050505092915050565b6115fa81611a49565b82525050565b600061160b826119db565b6116158185611a15565b9350611625818560208601611a8e565b61162e81611c47565b840191505092915050565b6000611646604483611a26565b915061165182611c58565b606082019050919050565b6000611669601583611a26565b915061167482611ccd565b602082019050919050565b600061168c600a83611a26565b915061169782611cf6565b602082019050919050565b60006116af603d83611a26565b91506116ba82611d1f565b604082019050919050565b60006116d2601583611a26565b91506116dd82611d6e565b602082019050919050565b60006116f5600d83611a26565b915061170082611d97565b602082019050919050565b6000611718602783611a26565b915061172382611dc0565b604082019050919050565b600060608301600083015161174660008601826117d5565b506020830151848203602086015261175e8282611600565b915050604083015184820360408601526117788282611507565b9150508091505092915050565b600060608301600083015161179d60008601826117d5565b50602083015184820360208601526117b58282611600565b91505060408301516117ca60408601826117d5565b508091505092915050565b6117de81611a75565b82525050565b60006020820190506117f960008301846114f8565b92915050565b60006020820190508181036000830152611819818461157c565b905092915050565b600060208201905061183660008301846115f1565b92915050565b6000602082019050818103600083015261185581611639565b9050919050565b600060208201905081810360008301526118758161165c565b9050919050565b600060208201905081810360008301526118958161167f565b9050919050565b600060208201905081810360008301526118b5816116a2565b9050919050565b600060208201905081810360008301526118d5816116c5565b9050919050565b600060208201905081810360008301526118f5816116e8565b9050919050565b600060208201905081810360008301526119158161170b565b9050919050565b60006020820190508181036000830152611936818461172e565b905092915050565b6000611948611959565b90506119548282611af3565b919050565b6000604051905090565b600067ffffffffffffffff82111561197e5761197d611bfa565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156119aa576119a9611bfa565b5b6119b382611c47565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611a4282611a55565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611aac578082015181840152602081019050611a91565b83811115611abb576000848401525b50505050565b60006002820490506001821680611ad957607f821691505b60208210811415611aed57611aec611b9c565b5b50919050565b611afc82611c47565b810181811067ffffffffffffffff82111715611b1b57611b1a611bfa565b5b80604052505050565b6000611b2f82611a75565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611b6257611b61611b6d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f63616e6e6f7420736565207468652062616c6c6f7420726573756c7420756e7460008201527f696c2043686169726d616e206f7220546561636865722068617320697420736860208201527f6172656400000000000000000000000000000000000000000000000000000000604082015250565b7f43686f69636520646f6573206e6f742065786973740000000000000000000000600082015250565b7f6f6e6c792061646d696e00000000000000000000000000000000000000000000600082015250565b7f596f75206861766520616c726561647920766f7465642c20766f74657220636160008201527f6e206f6e6c7920766f7465206f6e636520666f7220612062616c6c6f74000000602082015250565b7f566f74696e67206973206e6f7420656e61626c65640000000000000000000000600082015250565b7f6f6e6c792063686169726d616e00000000000000000000000000000000000000600082015250565b7f6f6e6c79207468652063686169726d616e206f7220617574686f72697a65642060008201527f7465616368657200000000000000000000000000000000000000000000000000602082015250565b611e1881611a37565b8114611e2357600080fd5b50565b611e2f81611a49565b8114611e3a57600080fd5b50565b611e4681611a75565b8114611e5157600080fd5b5056fea264697066735822122099b3b9566417e635ee34edd4bf5ea7d82a134b4e78de95ae75a5b11f75397ca564736f6c63430008050033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c8063a6c807a911610097578063f2f0177011610066578063f2f0177014610270578063f40046ae1461028c578063f851a440146102a8578063f9d5ee75146102c6576100f5565b8063a6c807a9146101d8578063a7b4952914610208578063b384abef14610224578063f0a47f7814610240576100f5565b80637478c9fe116100d35780637478c9fe14610166578063794074a11461018257806387f7b9751461019e578063892ac0c2146101bc576100f5565b80631b0c27da146100fa57806347ae4fb01461012a578063581c281c14610148575b600080fd5b610114600480360381019061010f9190611477565b6102f6565b60405161012191906117ff565b60405180910390f35b610132610460565b60405161013f9190611821565b60405180910390f35b610150610477565b60405161015d9190611821565b60405180910390f35b610180600480360381019061017b91906113d2565b61048e565b005b61019c600480360381019061019791906113ff565b610505565b005b6101a66106c7565b6040516101b391906117e4565b60405180910390f35b6101d660048036038101906101d19190611385565b6106ed565b005b6101f260048036038101906101ed9190611358565b610821565b6040516101ff9190611821565b60405180910390f35b610222600480360381019061021d9190611358565b610841565b005b61023e600480360381019061023991906114a4565b610915565b005b61025a60048036038101906102559190611358565b610c84565b6040516102679190611821565b60405180910390f35b61028a60048036038101906102859190611385565b610ca4565b005b6102a660048036038101906102a191906113d2565b610dd8565b005b6102b0610edf565b6040516102bd91906117e4565b60405180910390f35b6102e060048036038101906102db9190611477565b610f05565b6040516102ed919061191c565b60405180910390f35b6060600360159054906101000a900460ff16610347576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033e9061183c565b60405180910390fd5b60046000838152602001908152602001600020600201805480602002602001604051908101604052809291908181526020016000905b828210156104555783829060005260206000209060030201604051806060016040529081600082015481526020016001820180546103ba90611ac1565b80601f01602080910402602001604051908101604052809291908181526020018280546103e690611ac1565b80156104335780601f1061040857610100808354040283529160200191610433565b820191906000526020600020905b81548152906001019060200180831161041657829003601f168201915b505050505081526020016002820154815250508152602001906001019061037d565b505050509050919050565b6000600360159054906101000a900460ff16905090565b6000600360149054906101000a900460ff16905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104e857600080fd5b80600360146101000a81548160ff02191690831515021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610595576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058c906118dc565b60405180910390fd5b600554600460006005548152602001908152602001600020600001819055508160046000600554815260200190815260200160002060010190805190602001906105e09291906110d3565b5060005b81518110156106aa57600460006005548152602001908152602001600020600201604051806060016040528083815260200184848151811061062957610628611bcb565b5b602002602001015181526020016000815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000155602082015181600101908051906020019061068a9291906110d3565b5060408201518160020155505080806106a290611b24565b9150506105e4565b50600560008154809291906106be90611b24565b91905055505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461077d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107749061187c565b60405180910390fd5b60005b8282905081101561081c5760016000808585858181106107a3576107a2611bcb565b5b90506020020160208101906107b89190611358565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550808061081490611b24565b915050610780565b505050565b60016020528060005260406000206000915054906101000a900460ff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c89061187c565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806109c05750600115156000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b80610a1b575060011515600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b610a5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a51906118fc565b60405180910390fd5b600360149054906101000a900460ff16610aa9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa0906118bc565b60405180910390fd5b80600460008481526020019081526020016000206002018281548110610ad257610ad1611bcb565b5b90600052602060002090600302016000015414610b24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1b9061185c565b60405180910390fd5b60001515600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060009054906101000a900460ff16151514610bc8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bbf9061189c565b60405180910390fd5b6001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060006101000a81548160ff021916908315150217905550600460008381526020019081526020016000206002018181548110610c5957610c58611bcb565b5b90600052602060002090600302016002016000815480929190610c7b90611b24565b91905055505050565b60006020528060005260406000206000915054906101000a900460ff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2b9061187c565b60405180910390fd5b60005b82829050811015610dd3576001806000858585818110610d5a57610d59611bcb565b5b9050602002016020810190610d6f9190611358565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508080610dcb90611b24565b915050610d37565b505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610e835750600115156000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b610ec2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb9906118fc565b60405180910390fd5b80600360156101000a81548160ff02191690831515021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610f0d611159565b6004600083815260200190815260200160002060405180606001604052908160008201548152602001600182018054610f4590611ac1565b80601f0160208091040260200160405190810160405280929190818152602001828054610f7190611ac1565b8015610fbe5780601f10610f9357610100808354040283529160200191610fbe565b820191906000526020600020905b815481529060010190602001808311610fa157829003601f168201915b5050505050815260200160028201805480602002602001604051908101604052809291908181526020016000905b828210156110c457838290600052602060002090600302016040518060600160405290816000820154815260200160018201805461102990611ac1565b80601f016020809104026020016040519081016040528092919081815260200182805461105590611ac1565b80156110a25780601f10611077576101008083540402835291602001916110a2565b820191906000526020600020905b81548152906001019060200180831161108557829003601f168201915b5050505050815260200160028201548152505081526020019060010190610fec565b50505050815250509050919050565b8280546110df90611ac1565b90600052602060002090601f0160209004810192826111015760008555611148565b82601f1061111a57805160ff1916838001178555611148565b82800160010185558215611148579182015b8281111561114757825182559160200191906001019061112c565b5b509050611155919061117a565b5090565b60405180606001604052806000815260200160608152602001606081525090565b5b8082111561119357600081600090555060010161117b565b5090565b60006111aa6111a584611963565b61193e565b905080838252602082019050828560208602820111156111cd576111cc611c33565b5b60005b8581101561121b57813567ffffffffffffffff8111156111f3576111f2611c2e565b5b8086016112008982611315565b855260208501945060208401935050506001810190506111d0565b5050509392505050565b60006112386112338461198f565b61193e565b90508281526020810184848401111561125457611253611c38565b5b61125f848285611a7f565b509392505050565b60008135905061127681611e0f565b92915050565b60008083601f84011261129257611291611c2e565b5b8235905067ffffffffffffffff8111156112af576112ae611c29565b5b6020830191508360208202830111156112cb576112ca611c33565b5b9250929050565b600082601f8301126112e7576112e6611c2e565b5b81356112f7848260208601611197565b91505092915050565b60008135905061130f81611e26565b92915050565b600082601f83011261132a57611329611c2e565b5b813561133a848260208601611225565b91505092915050565b60008135905061135281611e3d565b92915050565b60006020828403121561136e5761136d611c42565b5b600061137c84828501611267565b91505092915050565b6000806020838503121561139c5761139b611c42565b5b600083013567ffffffffffffffff8111156113ba576113b9611c3d565b5b6113c68582860161127c565b92509250509250929050565b6000602082840312156113e8576113e7611c42565b5b60006113f684828501611300565b91505092915050565b6000806040838503121561141657611415611c42565b5b600083013567ffffffffffffffff81111561143457611433611c3d565b5b61144085828601611315565b925050602083013567ffffffffffffffff81111561146157611460611c3d565b5b61146d858286016112d2565b9150509250929050565b60006020828403121561148d5761148c611c42565b5b600061149b84828501611343565b91505092915050565b600080604083850312156114bb576114ba611c42565b5b60006114c985828601611343565b92505060206114da85828601611343565b9150509250929050565b60006114f08383611785565b905092915050565b61150181611a37565b82525050565b6000611512826119d0565b61151c81856119f3565b93508360208202850161152e856119c0565b8060005b8581101561156a578484038952815161154b85826114e4565b9450611556836119e6565b925060208a01995050600181019050611532565b50829750879550505050505092915050565b6000611587826119d0565b6115918185611a04565b9350836020820285016115a3856119c0565b8060005b858110156115df57848403895281516115c085826114e4565b94506115cb836119e6565b925060208a019950506001810190506115a7565b50829750879550505050505092915050565b6115fa81611a49565b82525050565b600061160b826119db565b6116158185611a15565b9350611625818560208601611a8e565b61162e81611c47565b840191505092915050565b6000611646604483611a26565b915061165182611c58565b606082019050919050565b6000611669601583611a26565b915061167482611ccd565b602082019050919050565b600061168c600a83611a26565b915061169782611cf6565b602082019050919050565b60006116af603d83611a26565b91506116ba82611d1f565b604082019050919050565b60006116d2601583611a26565b91506116dd82611d6e565b602082019050919050565b60006116f5600d83611a26565b915061170082611d97565b602082019050919050565b6000611718602783611a26565b915061172382611dc0565b604082019050919050565b600060608301600083015161174660008601826117d5565b506020830151848203602086015261175e8282611600565b915050604083015184820360408601526117788282611507565b9150508091505092915050565b600060608301600083015161179d60008601826117d5565b50602083015184820360208601526117b58282611600565b91505060408301516117ca60408601826117d5565b508091505092915050565b6117de81611a75565b82525050565b60006020820190506117f960008301846114f8565b92915050565b60006020820190508181036000830152611819818461157c565b905092915050565b600060208201905061183660008301846115f1565b92915050565b6000602082019050818103600083015261185581611639565b9050919050565b600060208201905081810360008301526118758161165c565b9050919050565b600060208201905081810360008301526118958161167f565b9050919050565b600060208201905081810360008301526118b5816116a2565b9050919050565b600060208201905081810360008301526118d5816116c5565b9050919050565b600060208201905081810360008301526118f5816116e8565b9050919050565b600060208201905081810360008301526119158161170b565b9050919050565b60006020820190508181036000830152611936818461172e565b905092915050565b6000611948611959565b90506119548282611af3565b919050565b6000604051905090565b600067ffffffffffffffff82111561197e5761197d611bfa565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156119aa576119a9611bfa565b5b6119b382611c47565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611a4282611a55565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611aac578082015181840152602081019050611a91565b83811115611abb576000848401525b50505050565b60006002820490506001821680611ad957607f821691505b60208210811415611aed57611aec611b9c565b5b50919050565b611afc82611c47565b810181811067ffffffffffffffff82111715611b1b57611b1a611bfa565b5b80604052505050565b6000611b2f82611a75565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611b6257611b61611b6d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f63616e6e6f7420736565207468652062616c6c6f7420726573756c7420756e7460008201527f696c2043686169726d616e206f7220546561636865722068617320697420736860208201527f6172656400000000000000000000000000000000000000000000000000000000604082015250565b7f43686f69636520646f6573206e6f742065786973740000000000000000000000600082015250565b7f6f6e6c792061646d696e00000000000000000000000000000000000000000000600082015250565b7f596f75206861766520616c726561647920766f7465642c20766f74657220636160008201527f6e206f6e6c7920766f7465206f6e636520666f7220612062616c6c6f74000000602082015250565b7f566f74696e67206973206e6f7420656e61626c65640000000000000000000000600082015250565b7f6f6e6c792063686169726d616e00000000000000000000000000000000000000600082015250565b7f6f6e6c79207468652063686169726d616e206f7220617574686f72697a65642060008201527f7465616368657200000000000000000000000000000000000000000000000000602082015250565b611e1881611a37565b8114611e2357600080fd5b50565b611e2f81611a49565b8114611e3a57600080fd5b50565b611e4681611a75565b8114611e5157600080fd5b5056fea264697066735822122099b3b9566417e635ee34edd4bf5ea7d82a134b4e78de95ae75a5b11f75397ca564736f6c63430008050033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 5,
        "contract": "contracts/Voting.sol:Voting",
        "label": "teachers",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 9,
        "contract": "contracts/Voting.sol:Voting",
        "label": "students",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 11,
        "contract": "contracts/Voting.sol:Voting",
        "label": "admin",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 13,
        "contract": "contracts/Voting.sol:Voting",
        "label": "chairman",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 15,
        "contract": "contracts/Voting.sol:Voting",
        "label": "votingEnabled",
        "offset": 20,
        "slot": "3",
        "type": "t_bool"
      },
      {
        "astId": 17,
        "contract": "contracts/Voting.sol:Voting",
        "label": "votingResult",
        "offset": 21,
        "slot": "3",
        "type": "t_bool"
      },
      {
        "astId": 38,
        "contract": "contracts/Voting.sol:Voting",
        "label": "ballots",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_struct(Ballot)33_storage)"
      },
      {
        "astId": 40,
        "contract": "contracts/Voting.sol:Voting",
        "label": "nextBallotId",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 46,
        "contract": "contracts/Voting.sol:Voting",
        "label": "votes",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Choice)24_storage)dyn_storage": {
        "base": "t_struct(Choice)24_storage",
        "encoding": "dynamic_array",
        "label": "struct Voting.Choice[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_bool)"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_struct(Ballot)33_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Voting.Ballot)",
        "numberOfBytes": "32",
        "value": "t_struct(Ballot)33_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Ballot)33_storage": {
        "encoding": "inplace",
        "label": "struct Voting.Ballot",
        "members": [
          {
            "astId": 26,
            "contract": "contracts/Voting.sol:Voting",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 28,
            "contract": "contracts/Voting.sol:Voting",
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 32,
            "contract": "contracts/Voting.sol:Voting",
            "label": "choices",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_struct(Choice)24_storage)dyn_storage"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(Choice)24_storage": {
        "encoding": "inplace",
        "label": "struct Voting.Choice",
        "members": [
          {
            "astId": 19,
            "contract": "contracts/Voting.sol:Voting",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 21,
            "contract": "contracts/Voting.sol:Voting",
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 23,
            "contract": "contracts/Voting.sol:Voting",
            "label": "votes",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}