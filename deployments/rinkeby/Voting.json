{
  "address": "0xD4827253B6d04A0Ecf57d6712525D666E1B7F41D",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "choices",
          "type": "string[]"
        }
      ],
      "name": "CreateBallot",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_students",
          "type": "address[]"
        }
      ],
      "name": "addStudents",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_teachers",
          "type": "address[]"
        }
      ],
      "name": "addTeachers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "chairman",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string[]",
          "name": "_choices",
          "type": "string[]"
        }
      ],
      "name": "createBallot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getBallot",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "votes",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Voting.Choice[]",
              "name": "choices",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Voting.Ballot",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVotingResultStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVotingStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ballotId",
          "type": "uint256"
        }
      ],
      "name": "results",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "votes",
              "type": "uint256"
            }
          ],
          "internalType": "struct Voting.Choice[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_chairman",
          "type": "address"
        }
      ],
      "name": "setChairman",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_votingResult",
          "type": "bool"
        }
      ],
      "name": "setVotingResultStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_votingStatus",
          "type": "bool"
        }
      ],
      "name": "setVotingStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "students",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "teachers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ballotId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "choiceId",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xb79a5b3fe0d835edf3ca18c2cf2178eb7031d44e96285e69c1593c50276559c6",
  "receipt": {
    "to": null,
    "from": "0x5865A606f4D3AE6daC75e1E89d3e187a6CCF84CF",
    "contractAddress": "0xD4827253B6d04A0Ecf57d6712525D666E1B7F41D",
    "transactionIndex": 22,
    "gasUsed": "1843256",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x66e5a8ba12ae7f88164dc1a4f4208fad1dbe8f83d59115bf8ee31fba7a50bfbc",
    "transactionHash": "0xb79a5b3fe0d835edf3ca18c2cf2178eb7031d44e96285e69c1593c50276559c6",
    "logs": [],
    "blockNumber": 10542162,
    "cumulativeGasUsed": "8555679",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 4,
  "solcInputHash": "6b6dac7f589889310faa8e34095cb42e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"choices\",\"type\":\"string[]\"}],\"name\":\"CreateBallot\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_students\",\"type\":\"address[]\"}],\"name\":\"addStudents\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_teachers\",\"type\":\"address[]\"}],\"name\":\"addTeachers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chairman\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"_choices\",\"type\":\"string[]\"}],\"name\":\"createBallot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getBallot\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"}],\"internalType\":\"struct Voting.Choice[]\",\"name\":\"choices\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Voting.Ballot\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVotingResultStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVotingStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ballotId\",\"type\":\"uint256\"}],\"name\":\"results\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"}],\"internalType\":\"struct Voting.Choice[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_chairman\",\"type\":\"address\"}],\"name\":\"setChairman\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_votingResult\",\"type\":\"bool\"}],\"name\":\"setVotingResultStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_votingStatus\",\"type\":\"bool\"}],\"name\":\"setVotingStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"students\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"teachers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ballotId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"choiceId\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"CreateBallot(uint256,string,string[])\":{\"notice\":\"Events to log public library\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Voting.sol\":\"Voting\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Voting.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.5;\\n\\ncontract Voting {\\n\\n  /*\\n    * get teachers list\\n  */\\n  mapping(address => bool) public teachers;\\n\\n  /*\\n    * get student list\\n  */\\n  mapping(address => bool) public students;\\n\\n  address public admin;\\n\\n  address public chairman;\\n\\n  /*\\n    * get voting status\\n  */\\n  bool votingEnabled;\\n\\n  /*\\n    * get voting result\\n  */\\n  bool votingResult;\\n\\n\\n  /*\\n    * struct for voting choices\\n  */\\n\\n  struct Choice {\\n    uint id;\\n    string name;\\n    uint votes;\\n  }\\n\\n  /*\\n    * struct for voting Ballot\\n  */\\n  struct Ballot {\\n    uint id;\\n    string name;\\n    Choice[] choices;\\n  }\\n\\n  mapping(uint => Ballot) ballots;\\n  uint nextBallotId;\\n  mapping(address => mapping(uint => bool)) votes;\\n\\n  /**\\n    @notice Events to log public library\\n    */\\n    event CreateBallot(uint id, string name, string[] choices);\\n\\n  constructor() {\\n    admin = msg.sender;\\n  }\\n\\n\\n  /*\\n    * set chairman\\n  */\\n  function setChairman(address _chairman) external onlyAdmin() {\\n    chairman = _chairman;\\n  }\\n\\n  /*\\n    * set voting status\\n  */\\n  function setVotingStatus(bool _votingStatus) external {\\n    require(msg.sender == chairman);\\n    votingEnabled = _votingStatus;\\n  }\\n\\n  /*\\n    * view voting status\\n  */\\n  function getVotingStatus() external view returns (bool) {\\n    return votingEnabled;\\n  }\\n\\n  /*\\n    * set voting result\\n  */\\n  function setVotingResultStatus(bool _votingResult) external onlyAuthorized() {\\n    votingResult = _votingResult;\\n  }\\n\\n    /*\\n    * view voting status\\n  */\\n  function getVotingResultStatus() external view returns (bool) {\\n    return votingResult;\\n  }\\n\\n  /*\\n    * add teacher\\n  */\\n  function addTeachers(address[] calldata _teachers) external onlyAdmin() {\\n    for(uint i = 0; i < _teachers.length; i++) {\\n        teachers[_teachers[i]] = true;\\n    }\\n  }\\n\\n  /*\\n    * add stuudent\\n  */\\n  function addStudents(address[] calldata _students) external onlyAdmin() {\\n    for(uint i = 0; i < _students.length; i++) {\\n        students[_students[i]] = true;\\n    }\\n  }\\n\\n  /*\\n    * create ballot\\n  */\\n  function createBallot(\\n    string memory name,\\n    string[] memory _choices\\n    ) public onlyChairman() {\\n      ballots[nextBallotId].id = nextBallotId;\\n      ballots[nextBallotId].name = name;\\n      for(uint i = 0; i < _choices.length ; i++) {\\n        ballots[nextBallotId].choices.push(Choice(i, _choices[i], 0));\\n      }\\n    emit CreateBallot(nextBallotId, name, _choices);\\n    nextBallotId++;\\n    \\n  }\\n\\n  /*\\n    * get ballot\\n  */\\n\\n  function getBallot(uint _id) external view returns (Ballot memory) {\\n    return ballots[_id];\\n  }\\n\\n\\n  /*\\n    * vote\\n  */\\n  function vote(uint ballotId, uint choiceId) external onlyAuthorizedToVote() {\\n    require(votingEnabled, \\\"Voting is not enabled\\\");\\n    require(ballots[ballotId].choices[choiceId].id == choiceId, \\\"Choice does not exist\\\");\\n    require(votes[msg.sender][ballotId] == false, 'You have already voted, voter can only vote once for a ballot');\\n    votes[msg.sender][ballotId] = true;\\n    ballots[ballotId].choices[choiceId].votes++;\\n  }\\n\\n  function results(uint ballotId)  view external returns(Choice[] memory) {\\n    require(votingResult, 'cannot see the ballot result until Chairman or Teacher has it shared');\\n    return ballots[ballotId].choices;\\n  }\\n\\n  modifier onlyAdmin() {\\n    require(msg.sender == admin, 'only admin');\\n    _;\\n  }\\n\\n  modifier onlyAuthorized() {\\n    require((msg.sender == chairman) || (teachers[msg.sender] == true), 'only the chairman or authorized teacher');\\n    _;\\n  }\\n\\n    modifier onlyAuthorizedToVote() {\\n    require((msg.sender == chairman) || (teachers[msg.sender] == true) || (students[msg.sender] == true), 'only the chairman or authorized teacher');\\n    _;\\n  }\\n\\n  modifier onlyChairman() {\\n    require(msg.sender == chairman, 'only chairman');\\n    _;\\n  }\\n\\n  \\n\\n}\",\"keccak256\":\"0x7a0c6bb0a10aeacb88df011fe95103a4fea3e6252e4d11d9fb699c49c0b69a4b\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612016806100616000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063a6c807a911610097578063f2f0177011610066578063f2f0177014610270578063f40046ae1461028c578063f851a440146102a8578063f9d5ee75146102c6576100f5565b8063a6c807a9146101d8578063a7b4952914610208578063b384abef14610224578063f0a47f7814610240576100f5565b80637478c9fe116100d35780637478c9fe14610166578063794074a11461018257806387f7b9751461019e578063892ac0c2146101bc576100f5565b80631b0c27da146100fa57806347ae4fb01461012a578063581c281c14610148575b600080fd5b610114600480360381019061010f91906114b4565b6102f6565b604051610121919061190d565b60405180910390f35b610132610460565b60405161013f919061192f565b60405180910390f35b610150610477565b60405161015d919061192f565b60405180910390f35b610180600480360381019061017b919061140f565b61048e565b005b61019c6004803603810190610197919061143c565b610505565b005b6101a6610704565b6040516101b391906118f2565b60405180910390f35b6101d660048036038101906101d191906113c2565b61072a565b005b6101f260048036038101906101ed9190611395565b61085e565b6040516101ff919061192f565b60405180910390f35b610222600480360381019061021d9190611395565b61087e565b005b61023e600480360381019061023991906114e1565b610952565b005b61025a60048036038101906102559190611395565b610cc1565b604051610267919061192f565b60405180910390f35b61028a600480360381019061028591906113c2565b610ce1565b005b6102a660048036038101906102a1919061140f565b610e15565b005b6102b0610f1c565b6040516102bd91906118f2565b60405180910390f35b6102e060048036038101906102db91906114b4565b610f42565b6040516102ed9190611a2a565b60405180910390f35b6060600360159054906101000a900460ff16610347576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033e9061194a565b60405180910390fd5b60046000838152602001908152602001600020600201805480602002602001604051908101604052809291908181526020016000905b828210156104555783829060005260206000209060030201604051806060016040529081600082015481526020016001820180546103ba90611c4d565b80601f01602080910402602001604051908101604052809291908181526020018280546103e690611c4d565b80156104335780601f1061040857610100808354040283529160200191610433565b820191906000526020600020905b81548152906001019060200180831161041657829003601f168201915b505050505081526020016002820154815250508152602001906001019061037d565b505050509050919050565b6000600360159054906101000a900460ff16905090565b6000600360149054906101000a900460ff16905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104e857600080fd5b80600360146101000a81548160ff02191690831515021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610595576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058c906119ea565b60405180910390fd5b600554600460006005548152602001908152602001600020600001819055508160046000600554815260200190815260200160002060010190805190602001906105e0929190611110565b5060005b81518110156106aa57600460006005548152602001908152602001600020600201604051806060016040528083815260200184848151811061062957610628611d57565b5b602002602001015181526020016000815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000155602082015181600101908051906020019061068a929190611110565b5060408201518160020155505080806106a290611cb0565b9150506105e4565b507facc78a389f434adf5bbfb77e5918ddff0c1bd8c079edc8654d1916725e626e3b60055483836040516106e093929190611a4c565b60405180910390a1600560008154809291906106fb90611cb0565b91905055505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b19061198a565b60405180910390fd5b60005b828290508110156108595760016000808585858181106107e0576107df611d57565b5b90506020020160208101906107f59190611395565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550808061085190611cb0565b9150506107bd565b505050565b60016020528060005260406000206000915054906101000a900460ff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461090e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109059061198a565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806109fd5750600115156000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b80610a58575060011515600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b610a97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8e90611a0a565b60405180910390fd5b600360149054906101000a900460ff16610ae6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610add906119ca565b60405180910390fd5b80600460008481526020019081526020016000206002018281548110610b0f57610b0e611d57565b5b90600052602060002090600302016000015414610b61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b589061196a565b60405180910390fd5b60001515600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060009054906101000a900460ff16151514610c05576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bfc906119aa565b60405180910390fd5b6001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060006101000a81548160ff021916908315150217905550600460008381526020019081526020016000206002018181548110610c9657610c95611d57565b5b90600052602060002090600302016002016000815480929190610cb890611cb0565b91905055505050565b60006020528060005260406000206000915054906101000a900460ff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d71576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d689061198a565b60405180910390fd5b60005b82829050811015610e10576001806000858585818110610d9757610d96611d57565b5b9050602002016020810190610dac9190611395565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508080610e0890611cb0565b915050610d74565b505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610ec05750600115156000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b610eff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef690611a0a565b60405180910390fd5b80600360156101000a81548160ff02191690831515021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610f4a611196565b6004600083815260200190815260200160002060405180606001604052908160008201548152602001600182018054610f8290611c4d565b80601f0160208091040260200160405190810160405280929190818152602001828054610fae90611c4d565b8015610ffb5780601f10610fd057610100808354040283529160200191610ffb565b820191906000526020600020905b815481529060010190602001808311610fde57829003601f168201915b5050505050815260200160028201805480602002602001604051908101604052809291908181526020016000905b8282101561110157838290600052602060002090600302016040518060600160405290816000820154815260200160018201805461106690611c4d565b80601f016020809104026020016040519081016040528092919081815260200182805461109290611c4d565b80156110df5780601f106110b4576101008083540402835291602001916110df565b820191906000526020600020905b8154815290600101906020018083116110c257829003601f168201915b5050505050815260200160028201548152505081526020019060010190611029565b50505050815250509050919050565b82805461111c90611c4d565b90600052602060002090601f01602090048101928261113e5760008555611185565b82601f1061115757805160ff1916838001178555611185565b82800160010185558215611185579182015b82811115611184578251825591602001919060010190611169565b5b50905061119291906111b7565b5090565b60405180606001604052806000815260200160608152602001606081525090565b5b808211156111d05760008160009055506001016111b8565b5090565b60006111e76111e284611ab6565b611a91565b9050808382526020820190508285602086028201111561120a57611209611dbf565b5b60005b8581101561125857813567ffffffffffffffff8111156112305761122f611dba565b5b80860161123d8982611352565b8552602085019450602084019350505060018101905061120d565b5050509392505050565b600061127561127084611ae2565b611a91565b90508281526020810184848401111561129157611290611dc4565b5b61129c848285611c0b565b509392505050565b6000813590506112b381611f9b565b92915050565b60008083601f8401126112cf576112ce611dba565b5b8235905067ffffffffffffffff8111156112ec576112eb611db5565b5b60208301915083602082028301111561130857611307611dbf565b5b9250929050565b600082601f83011261132457611323611dba565b5b81356113348482602086016111d4565b91505092915050565b60008135905061134c81611fb2565b92915050565b600082601f83011261136757611366611dba565b5b8135611377848260208601611262565b91505092915050565b60008135905061138f81611fc9565b92915050565b6000602082840312156113ab576113aa611dce565b5b60006113b9848285016112a4565b91505092915050565b600080602083850312156113d9576113d8611dce565b5b600083013567ffffffffffffffff8111156113f7576113f6611dc9565b5b611403858286016112b9565b92509250509250929050565b60006020828403121561142557611424611dce565b5b60006114338482850161133d565b91505092915050565b6000806040838503121561145357611452611dce565b5b600083013567ffffffffffffffff81111561147157611470611dc9565b5b61147d85828601611352565b925050602083013567ffffffffffffffff81111561149e5761149d611dc9565b5b6114aa8582860161130f565b9150509250929050565b6000602082840312156114ca576114c9611dce565b5b60006114d884828501611380565b91505092915050565b600080604083850312156114f8576114f7611dce565b5b600061150685828601611380565b925050602061151785828601611380565b9150509250929050565b600061152d83836116c6565b905092915050565b60006115418383611884565b905092915050565b61155281611bc3565b82525050565b600061156382611b33565b61156d8185611b6e565b93508360208202850161157f85611b13565b8060005b858110156115bb578484038952815161159c8582611521565b94506115a783611b54565b925060208a01995050600181019050611583565b50829750879550505050505092915050565b60006115d882611b3e565b6115e28185611b7f565b9350836020820285016115f485611b23565b8060005b8581101561163057848403895281516116118582611535565b945061161c83611b61565b925060208a019950506001810190506115f8565b50829750879550505050505092915050565b600061164d82611b3e565b6116578185611b90565b93508360208202850161166985611b23565b8060005b858110156116a557848403895281516116868582611535565b945061169183611b61565b925060208a0199505060018101905061166d565b50829750879550505050505092915050565b6116c081611bd5565b82525050565b60006116d182611b49565b6116db8185611ba1565b93506116eb818560208601611c1a565b6116f481611dd3565b840191505092915050565b600061170a82611b49565b6117148185611bb2565b9350611724818560208601611c1a565b61172d81611dd3565b840191505092915050565b6000611745604483611bb2565b915061175082611de4565b606082019050919050565b6000611768601583611bb2565b915061177382611e59565b602082019050919050565b600061178b600a83611bb2565b915061179682611e82565b602082019050919050565b60006117ae603d83611bb2565b91506117b982611eab565b604082019050919050565b60006117d1601583611bb2565b91506117dc82611efa565b602082019050919050565b60006117f4600d83611bb2565b91506117ff82611f23565b602082019050919050565b6000611817602783611bb2565b915061182282611f4c565b604082019050919050565b600060608301600083015161184560008601826118d4565b506020830151848203602086015261185d82826116c6565b9150506040830151848203604086015261187782826115cd565b9150508091505092915050565b600060608301600083015161189c60008601826118d4565b50602083015184820360208601526118b482826116c6565b91505060408301516118c960408601826118d4565b508091505092915050565b6118dd81611c01565b82525050565b6118ec81611c01565b82525050565b60006020820190506119076000830184611549565b92915050565b600060208201905081810360008301526119278184611642565b905092915050565b600060208201905061194460008301846116b7565b92915050565b6000602082019050818103600083015261196381611738565b9050919050565b600060208201905081810360008301526119838161175b565b9050919050565b600060208201905081810360008301526119a38161177e565b9050919050565b600060208201905081810360008301526119c3816117a1565b9050919050565b600060208201905081810360008301526119e3816117c4565b9050919050565b60006020820190508181036000830152611a03816117e7565b9050919050565b60006020820190508181036000830152611a238161180a565b9050919050565b60006020820190508181036000830152611a44818461182d565b905092915050565b6000606082019050611a6160008301866118e3565b8181036020830152611a7381856116ff565b90508181036040830152611a878184611558565b9050949350505050565b6000611a9b611aac565b9050611aa78282611c7f565b919050565b6000604051905090565b600067ffffffffffffffff821115611ad157611ad0611d86565b5b602082029050602081019050919050565b600067ffffffffffffffff821115611afd57611afc611d86565b5b611b0682611dd3565b9050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611bce82611be1565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611c38578082015181840152602081019050611c1d565b83811115611c47576000848401525b50505050565b60006002820490506001821680611c6557607f821691505b60208210811415611c7957611c78611d28565b5b50919050565b611c8882611dd3565b810181811067ffffffffffffffff82111715611ca757611ca6611d86565b5b80604052505050565b6000611cbb82611c01565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611cee57611ced611cf9565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f63616e6e6f7420736565207468652062616c6c6f7420726573756c7420756e7460008201527f696c2043686169726d616e206f7220546561636865722068617320697420736860208201527f6172656400000000000000000000000000000000000000000000000000000000604082015250565b7f43686f69636520646f6573206e6f742065786973740000000000000000000000600082015250565b7f6f6e6c792061646d696e00000000000000000000000000000000000000000000600082015250565b7f596f75206861766520616c726561647920766f7465642c20766f74657220636160008201527f6e206f6e6c7920766f7465206f6e636520666f7220612062616c6c6f74000000602082015250565b7f566f74696e67206973206e6f7420656e61626c65640000000000000000000000600082015250565b7f6f6e6c792063686169726d616e00000000000000000000000000000000000000600082015250565b7f6f6e6c79207468652063686169726d616e206f7220617574686f72697a65642060008201527f7465616368657200000000000000000000000000000000000000000000000000602082015250565b611fa481611bc3565b8114611faf57600080fd5b50565b611fbb81611bd5565b8114611fc657600080fd5b50565b611fd281611c01565b8114611fdd57600080fd5b5056fea2646970667358221220ee4353c38a783894e0720a1152d8a957e515bb0fb764d18539129537a55b63ae64736f6c63430008050033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c8063a6c807a911610097578063f2f0177011610066578063f2f0177014610270578063f40046ae1461028c578063f851a440146102a8578063f9d5ee75146102c6576100f5565b8063a6c807a9146101d8578063a7b4952914610208578063b384abef14610224578063f0a47f7814610240576100f5565b80637478c9fe116100d35780637478c9fe14610166578063794074a11461018257806387f7b9751461019e578063892ac0c2146101bc576100f5565b80631b0c27da146100fa57806347ae4fb01461012a578063581c281c14610148575b600080fd5b610114600480360381019061010f91906114b4565b6102f6565b604051610121919061190d565b60405180910390f35b610132610460565b60405161013f919061192f565b60405180910390f35b610150610477565b60405161015d919061192f565b60405180910390f35b610180600480360381019061017b919061140f565b61048e565b005b61019c6004803603810190610197919061143c565b610505565b005b6101a6610704565b6040516101b391906118f2565b60405180910390f35b6101d660048036038101906101d191906113c2565b61072a565b005b6101f260048036038101906101ed9190611395565b61085e565b6040516101ff919061192f565b60405180910390f35b610222600480360381019061021d9190611395565b61087e565b005b61023e600480360381019061023991906114e1565b610952565b005b61025a60048036038101906102559190611395565b610cc1565b604051610267919061192f565b60405180910390f35b61028a600480360381019061028591906113c2565b610ce1565b005b6102a660048036038101906102a1919061140f565b610e15565b005b6102b0610f1c565b6040516102bd91906118f2565b60405180910390f35b6102e060048036038101906102db91906114b4565b610f42565b6040516102ed9190611a2a565b60405180910390f35b6060600360159054906101000a900460ff16610347576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033e9061194a565b60405180910390fd5b60046000838152602001908152602001600020600201805480602002602001604051908101604052809291908181526020016000905b828210156104555783829060005260206000209060030201604051806060016040529081600082015481526020016001820180546103ba90611c4d565b80601f01602080910402602001604051908101604052809291908181526020018280546103e690611c4d565b80156104335780601f1061040857610100808354040283529160200191610433565b820191906000526020600020905b81548152906001019060200180831161041657829003601f168201915b505050505081526020016002820154815250508152602001906001019061037d565b505050509050919050565b6000600360159054906101000a900460ff16905090565b6000600360149054906101000a900460ff16905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104e857600080fd5b80600360146101000a81548160ff02191690831515021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610595576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058c906119ea565b60405180910390fd5b600554600460006005548152602001908152602001600020600001819055508160046000600554815260200190815260200160002060010190805190602001906105e0929190611110565b5060005b81518110156106aa57600460006005548152602001908152602001600020600201604051806060016040528083815260200184848151811061062957610628611d57565b5b602002602001015181526020016000815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000155602082015181600101908051906020019061068a929190611110565b5060408201518160020155505080806106a290611cb0565b9150506105e4565b507facc78a389f434adf5bbfb77e5918ddff0c1bd8c079edc8654d1916725e626e3b60055483836040516106e093929190611a4c565b60405180910390a1600560008154809291906106fb90611cb0565b91905055505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b19061198a565b60405180910390fd5b60005b828290508110156108595760016000808585858181106107e0576107df611d57565b5b90506020020160208101906107f59190611395565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550808061085190611cb0565b9150506107bd565b505050565b60016020528060005260406000206000915054906101000a900460ff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461090e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109059061198a565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806109fd5750600115156000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b80610a58575060011515600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b610a97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8e90611a0a565b60405180910390fd5b600360149054906101000a900460ff16610ae6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610add906119ca565b60405180910390fd5b80600460008481526020019081526020016000206002018281548110610b0f57610b0e611d57565b5b90600052602060002090600302016000015414610b61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b589061196a565b60405180910390fd5b60001515600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060009054906101000a900460ff16151514610c05576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bfc906119aa565b60405180910390fd5b6001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060006101000a81548160ff021916908315150217905550600460008381526020019081526020016000206002018181548110610c9657610c95611d57565b5b90600052602060002090600302016002016000815480929190610cb890611cb0565b91905055505050565b60006020528060005260406000206000915054906101000a900460ff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d71576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d689061198a565b60405180910390fd5b60005b82829050811015610e10576001806000858585818110610d9757610d96611d57565b5b9050602002016020810190610dac9190611395565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508080610e0890611cb0565b915050610d74565b505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610ec05750600115156000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b610eff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef690611a0a565b60405180910390fd5b80600360156101000a81548160ff02191690831515021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610f4a611196565b6004600083815260200190815260200160002060405180606001604052908160008201548152602001600182018054610f8290611c4d565b80601f0160208091040260200160405190810160405280929190818152602001828054610fae90611c4d565b8015610ffb5780601f10610fd057610100808354040283529160200191610ffb565b820191906000526020600020905b815481529060010190602001808311610fde57829003601f168201915b5050505050815260200160028201805480602002602001604051908101604052809291908181526020016000905b8282101561110157838290600052602060002090600302016040518060600160405290816000820154815260200160018201805461106690611c4d565b80601f016020809104026020016040519081016040528092919081815260200182805461109290611c4d565b80156110df5780601f106110b4576101008083540402835291602001916110df565b820191906000526020600020905b8154815290600101906020018083116110c257829003601f168201915b5050505050815260200160028201548152505081526020019060010190611029565b50505050815250509050919050565b82805461111c90611c4d565b90600052602060002090601f01602090048101928261113e5760008555611185565b82601f1061115757805160ff1916838001178555611185565b82800160010185558215611185579182015b82811115611184578251825591602001919060010190611169565b5b50905061119291906111b7565b5090565b60405180606001604052806000815260200160608152602001606081525090565b5b808211156111d05760008160009055506001016111b8565b5090565b60006111e76111e284611ab6565b611a91565b9050808382526020820190508285602086028201111561120a57611209611dbf565b5b60005b8581101561125857813567ffffffffffffffff8111156112305761122f611dba565b5b80860161123d8982611352565b8552602085019450602084019350505060018101905061120d565b5050509392505050565b600061127561127084611ae2565b611a91565b90508281526020810184848401111561129157611290611dc4565b5b61129c848285611c0b565b509392505050565b6000813590506112b381611f9b565b92915050565b60008083601f8401126112cf576112ce611dba565b5b8235905067ffffffffffffffff8111156112ec576112eb611db5565b5b60208301915083602082028301111561130857611307611dbf565b5b9250929050565b600082601f83011261132457611323611dba565b5b81356113348482602086016111d4565b91505092915050565b60008135905061134c81611fb2565b92915050565b600082601f83011261136757611366611dba565b5b8135611377848260208601611262565b91505092915050565b60008135905061138f81611fc9565b92915050565b6000602082840312156113ab576113aa611dce565b5b60006113b9848285016112a4565b91505092915050565b600080602083850312156113d9576113d8611dce565b5b600083013567ffffffffffffffff8111156113f7576113f6611dc9565b5b611403858286016112b9565b92509250509250929050565b60006020828403121561142557611424611dce565b5b60006114338482850161133d565b91505092915050565b6000806040838503121561145357611452611dce565b5b600083013567ffffffffffffffff81111561147157611470611dc9565b5b61147d85828601611352565b925050602083013567ffffffffffffffff81111561149e5761149d611dc9565b5b6114aa8582860161130f565b9150509250929050565b6000602082840312156114ca576114c9611dce565b5b60006114d884828501611380565b91505092915050565b600080604083850312156114f8576114f7611dce565b5b600061150685828601611380565b925050602061151785828601611380565b9150509250929050565b600061152d83836116c6565b905092915050565b60006115418383611884565b905092915050565b61155281611bc3565b82525050565b600061156382611b33565b61156d8185611b6e565b93508360208202850161157f85611b13565b8060005b858110156115bb578484038952815161159c8582611521565b94506115a783611b54565b925060208a01995050600181019050611583565b50829750879550505050505092915050565b60006115d882611b3e565b6115e28185611b7f565b9350836020820285016115f485611b23565b8060005b8581101561163057848403895281516116118582611535565b945061161c83611b61565b925060208a019950506001810190506115f8565b50829750879550505050505092915050565b600061164d82611b3e565b6116578185611b90565b93508360208202850161166985611b23565b8060005b858110156116a557848403895281516116868582611535565b945061169183611b61565b925060208a0199505060018101905061166d565b50829750879550505050505092915050565b6116c081611bd5565b82525050565b60006116d182611b49565b6116db8185611ba1565b93506116eb818560208601611c1a565b6116f481611dd3565b840191505092915050565b600061170a82611b49565b6117148185611bb2565b9350611724818560208601611c1a565b61172d81611dd3565b840191505092915050565b6000611745604483611bb2565b915061175082611de4565b606082019050919050565b6000611768601583611bb2565b915061177382611e59565b602082019050919050565b600061178b600a83611bb2565b915061179682611e82565b602082019050919050565b60006117ae603d83611bb2565b91506117b982611eab565b604082019050919050565b60006117d1601583611bb2565b91506117dc82611efa565b602082019050919050565b60006117f4600d83611bb2565b91506117ff82611f23565b602082019050919050565b6000611817602783611bb2565b915061182282611f4c565b604082019050919050565b600060608301600083015161184560008601826118d4565b506020830151848203602086015261185d82826116c6565b9150506040830151848203604086015261187782826115cd565b9150508091505092915050565b600060608301600083015161189c60008601826118d4565b50602083015184820360208601526118b482826116c6565b91505060408301516118c960408601826118d4565b508091505092915050565b6118dd81611c01565b82525050565b6118ec81611c01565b82525050565b60006020820190506119076000830184611549565b92915050565b600060208201905081810360008301526119278184611642565b905092915050565b600060208201905061194460008301846116b7565b92915050565b6000602082019050818103600083015261196381611738565b9050919050565b600060208201905081810360008301526119838161175b565b9050919050565b600060208201905081810360008301526119a38161177e565b9050919050565b600060208201905081810360008301526119c3816117a1565b9050919050565b600060208201905081810360008301526119e3816117c4565b9050919050565b60006020820190508181036000830152611a03816117e7565b9050919050565b60006020820190508181036000830152611a238161180a565b9050919050565b60006020820190508181036000830152611a44818461182d565b905092915050565b6000606082019050611a6160008301866118e3565b8181036020830152611a7381856116ff565b90508181036040830152611a878184611558565b9050949350505050565b6000611a9b611aac565b9050611aa78282611c7f565b919050565b6000604051905090565b600067ffffffffffffffff821115611ad157611ad0611d86565b5b602082029050602081019050919050565b600067ffffffffffffffff821115611afd57611afc611d86565b5b611b0682611dd3565b9050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611bce82611be1565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611c38578082015181840152602081019050611c1d565b83811115611c47576000848401525b50505050565b60006002820490506001821680611c6557607f821691505b60208210811415611c7957611c78611d28565b5b50919050565b611c8882611dd3565b810181811067ffffffffffffffff82111715611ca757611ca6611d86565b5b80604052505050565b6000611cbb82611c01565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611cee57611ced611cf9565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f63616e6e6f7420736565207468652062616c6c6f7420726573756c7420756e7460008201527f696c2043686169726d616e206f7220546561636865722068617320697420736860208201527f6172656400000000000000000000000000000000000000000000000000000000604082015250565b7f43686f69636520646f6573206e6f742065786973740000000000000000000000600082015250565b7f6f6e6c792061646d696e00000000000000000000000000000000000000000000600082015250565b7f596f75206861766520616c726561647920766f7465642c20766f74657220636160008201527f6e206f6e6c7920766f7465206f6e636520666f7220612062616c6c6f74000000602082015250565b7f566f74696e67206973206e6f7420656e61626c65640000000000000000000000600082015250565b7f6f6e6c792063686169726d616e00000000000000000000000000000000000000600082015250565b7f6f6e6c79207468652063686169726d616e206f7220617574686f72697a65642060008201527f7465616368657200000000000000000000000000000000000000000000000000602082015250565b611fa481611bc3565b8114611faf57600080fd5b50565b611fbb81611bd5565b8114611fc657600080fd5b50565b611fd281611c01565b8114611fdd57600080fd5b5056fea2646970667358221220ee4353c38a783894e0720a1152d8a957e515bb0fb764d18539129537a55b63ae64736f6c63430008050033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "events": {
      "CreateBallot(uint256,string,string[])": {
        "notice": "Events to log public library"
      }
    },
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 5,
        "contract": "contracts/Voting.sol:Voting",
        "label": "teachers",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 9,
        "contract": "contracts/Voting.sol:Voting",
        "label": "students",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 11,
        "contract": "contracts/Voting.sol:Voting",
        "label": "admin",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 13,
        "contract": "contracts/Voting.sol:Voting",
        "label": "chairman",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 15,
        "contract": "contracts/Voting.sol:Voting",
        "label": "votingEnabled",
        "offset": 20,
        "slot": "3",
        "type": "t_bool"
      },
      {
        "astId": 17,
        "contract": "contracts/Voting.sol:Voting",
        "label": "votingResult",
        "offset": 21,
        "slot": "3",
        "type": "t_bool"
      },
      {
        "astId": 38,
        "contract": "contracts/Voting.sol:Voting",
        "label": "ballots",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_struct(Ballot)33_storage)"
      },
      {
        "astId": 40,
        "contract": "contracts/Voting.sol:Voting",
        "label": "nextBallotId",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 46,
        "contract": "contracts/Voting.sol:Voting",
        "label": "votes",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Choice)24_storage)dyn_storage": {
        "base": "t_struct(Choice)24_storage",
        "encoding": "dynamic_array",
        "label": "struct Voting.Choice[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_bool)"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_struct(Ballot)33_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Voting.Ballot)",
        "numberOfBytes": "32",
        "value": "t_struct(Ballot)33_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Ballot)33_storage": {
        "encoding": "inplace",
        "label": "struct Voting.Ballot",
        "members": [
          {
            "astId": 26,
            "contract": "contracts/Voting.sol:Voting",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 28,
            "contract": "contracts/Voting.sol:Voting",
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 32,
            "contract": "contracts/Voting.sol:Voting",
            "label": "choices",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_struct(Choice)24_storage)dyn_storage"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(Choice)24_storage": {
        "encoding": "inplace",
        "label": "struct Voting.Choice",
        "members": [
          {
            "astId": 19,
            "contract": "contracts/Voting.sol:Voting",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 21,
            "contract": "contracts/Voting.sol:Voting",
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 23,
            "contract": "contracts/Voting.sol:Voting",
            "label": "votes",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}